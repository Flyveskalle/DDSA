@*
Github ex

    @foreach(var group in Model.Children.InGroupsOf(2))
    {
        <div class="row-of-two">
            @foreach(var item in group)
            {
                <span>@item.Name</span>
            }
        </div>
    }

    Produces something like:

<div class="row-of-two">
  <span>Title 1</span>
  <span>Title 2</span>
</div>

<div class="row-of-two">
  <span>Title 3</span>
  <span>Title 4</span>
</div>

*@

@inherits umbraco.MacroEngines.DynamicNodeContext
@{ 
	var level = String.IsNullOrEmpty(Parameter.Level) ? 1 : int.Parse(Parameter.Level); 
	var ulClass = String.IsNullOrEmpty(Parameter.UlClass) ? "" : String.Format(" class=\"{0}\"", Parameter.UlClass); 
	var parent = @Model.AncestorOrSelf(level);
	if (parent != null) {
		<ul@Html.Raw(ulClass)>
		@foreach (var item in parent.Children.Where("Visible")) {
			var selected = Array.IndexOf(Model.Path.Split(','), item.Id.ToString()) >= 0 ? " class=\"selected\"" : "";
			
			if(@item.Position() == 0)
            {
                <li@Html.Raw(selected)>
                	<a href="@item.Url">ARRRRGT</a>
				</li>
            }
            else
            {
            	<li@Html.Raw(selected)>
					<a href="@item.Url">@item.Name</a>
				</li>
            }
		}
		</ul>
	}
}
